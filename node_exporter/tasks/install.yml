---

- name: NODE-EXPORTER | node-exporter group
  group:
    name: "{{ node_exporter_group }}"

- name: NODE-EXPORTER | node-exporter user
  user:
    name: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    shell: /bin/bash


# - name: NODE-EXPORTER | create paths
#   file:
#     dest: "{{ item }}"
#     owner: "{{ grafana_user }}"
#     group: "{{ grafana_user }}"
#     state: directory
#   with_items:
#     - "{{ grafana_skeleton_paths }}"

- name: NODE-EXPORTER | install node-exporter
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: /opt
    remote_src: true

- name: NODE-EXPORTER | move node_exporter binary into place.
  copy:
    src: "/opt/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: "{{ node_exporter_bin_path }}"
    mode: 0755
    remote_src: true
  notify: restart node_exporter

- name: NODE-EXPORTER | copy the node_exporter systemd unit file.
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    mode: 0644
  register: node_exporter_service

- name: NODE-EXPORTER | reload systemd daemon if unit file is changed.
  systemd:
    daemon_reload: true
  notify: restart node_exporter
  when: node_exporter_service is changed

- name: NODE-EXPORTER | ensure node_exporter is running and enabled at boot.
  service:
    name: node_exporter
    state: "{{ node_exporter_state }}"
    enabled: "{{ node_exporter_enabled }}"

- name: NODE-EXPORTER | verify node_exporter is responding to requests.
  uri:
    url: "http://{% if node_exporter_host !='' %}{{ node_exporter_host }}{% else %}localhost{% endif %}:{{ node_exporter_port }}/"
    return_content: true
  register: metrics_output
  failed_when: "'Metrics' not in metrics_output.content"
  