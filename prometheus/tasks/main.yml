---
- name: PROMETHEUS | create /opt/prometheus directory
  ansible.builtin.file:
    path: /opt/prometheus
    state: directory
    owner: root
    group: root
    mode: 0750
  changed_when: false

- name: PROMETHEUS | check if binary exists
  ansible.builtin.stat:
    path: /opt/prometheus/prometheus
  register: binary

- name: PROMETHEUS | check prometheus version
  ansible.builtin.command: /opt/prometheus/prometheus --version
  register: prometheus_version_check
  when: binary.stat.exists
  changed_when: false

- name: PROMETHEUS | install prometheus if its not present
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v\
         {{  prometheus_version  }}/prometheus-{{  prometheus_version  }}.linux-amd64.tar.gz"
    dest: /opt/prometheus
    remote_src: true
  tags:
    - loki
  when: not binary.stat.exists

# - name: PROMETHEUS | update prometheus if different version is defined in variable
#   ansible.builtin.unarchive:
#     src: "https://github.com/prometheus/prometheus/releases/download/v\
#          {{  prometheus_version  }}/prometheus-{{  prometheus_version  }}.linux-amd64.tar.gz"
#     dest: /opt/prometheus/
#     remote_src: true
#   tags:
#     - loki
#   when: (prometheus_version_check | regex_search('\d.\d+.\d+') != prometheus_version)
#   notify: restart prometheus

- name: PROMETHEUS | check if install artifacts exist
  ansible.builtin.stat:
    path: "/opt/prometheus/prometheus-{{  prometheus_version  }}.linux-amd64/"
  register: artifacts

- name: PROMETHEUS | stop prometheus service temporarily
  ansible.builtin.systemd:
    name: prometheus
    state: stopped
  when: (artifacts.stat.exists) and binary.stat.exists

- name: PROMETHEUS | Move prometheus and promtool binaries
  ansible.builtin.copy:
    src: "/opt/prometheus/prometheus-{{  prometheus_version  }}.linux-amd64/"
    dest: /opt/prometheus
    owner: root
    group: root
    mode: '0750'
    remote_src: true
  when: artifacts.stat.exists

- name: PROMETHEUS | remove artifacts from prometheus install
  ansible.builtin.file:
    path: "{{  item  }}"
    state: absent
  with_items:
    - "/opt/prometheus/prometheus-{{  prometheus_version  }}.linux-amd64"
    - "/opt/prometheus/prometheus.yml"
  when: artifacts.stat.exists

- name: PROMETHEUS | start prometheus service temporarily
  ansible.builtin.systemd:
    name: prometheus
    state: started
  when: (artifacts.stat.exists) and binary.stat.exists

- name: PROMETHEUS | template systemd unit file
  ansible.builtin.template:
    src: templates/prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0750
  tags:
    - prometheus
  changed_when: false

- name: PROMETHEUS | make directory for prometheus config
  ansible.builtin.file:
    path: "{{  item  }}"
    state: directory
    owner: root
    group: root
    mode: 0640
  with_items:
    - /var/lib/prometheus
    - /etc/prometheus
    - /etc/prometheus/rules.d
    - /etc/prometheus/files.d

- name: PROMETHEUS | template prometheus config file
  ansible.builtin.template:
    src: templates/prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: root
    group: root
    mode: 0640
  tags:
    - template

- name: PROMETHEUS | reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
  tags:
    - prometheus

- name: PROMETHEUS | enable and start prometheus service
  ansible.builtin.systemd:
    name: prometheus
    enabled: true
    state: started
  tags:
    - prometheus